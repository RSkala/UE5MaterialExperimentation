
-------------------------------
Material Notes

https://www.udemy.com/course/unreal-engin5-one-course-solution-for-material/
=============================================================
Material Graph Data Types

3 Basic Types (there are more than these):
* Constant / 1 float 
* Constant2Vector / 2 floats
* Constant3Vector / 3 floats

Note that constant2Vector has (R,G) and constant3Vector has (R,G,B) but these can be anything.
For example, if plugging into color socket RGB = Red, Green, and Blue Channels, but if plugging into a position socket, RGB will refer to XYZ, respectively.

----------------
BaseColor
* "BaseColor" is looking for a constant3Vector for Red, Green, and Blue Channels.

Keyboard Shortcut:
* If you hold 1,2,3, or 4 keys then left click in the Material Graph, you can quickly create one of the respective "Constant" types. For example, 3+left-click creates a Constant3Vector

Be sure to click the APPLY button in the upper left corner to affect the material.
"SAVE" also seems to apply the color.

Note:
* There seems to be a bug where changing the value of the color inside a Constant node doesn't change the color of the preview until you manually enter some value for any of the R,G,B parameters in the node.

=============================================================
Roughness

* This is a socket in the Material
* Requires a Constant1Vector (Constant, single float)
* Controls how "Reflective" a surface will be
  * A value of 1 = The surface will become completely "rough"
  * A value of 0 = The surface will become completely "reflective"
  * A value outside of 0 and 1 will have no effect (clamped to 0..1)

=============================================================
Lerp

HotKey: L + LeftClick

3 Sockets in the Lerp Node:
* A, B, Alpha
* Alpha is the percentage from value A to value B
* If Alpha is 0, then A is used
* If Alpha is 1, then B is used
* If Alpha is 0.5, then a value halfway is used (0.5)

Noise Texture
* Has random AREAS between 0 and 1 all over
* Unreal Engine has a built in Noise Texture in the Starter Pack
* T_Perlin_Noise_M

Texture Sample / External Textures
* Any time you want to use an external texture in the graph, you must "Sample" it first.
* Right-click -> Texture -> TextureSample
  * Hotkey: T+Leftclick
* A TextureSample uses and outputs the color values from a texture 
* With the TextureSample node selected, on the left, under Details, select:
  * Material Expression Texture Base -> Texture
* Here, we can select the T_Perlin_Noise_M texture

If you open the perlin noise texture, and turn on and off each RGB value, you can see that they are all the same.
So, it doesn't matter if we use R or G or B.
We just need a single value to connect to the Alpha in the Lerp node.

=============================================================
UV

What is UV?
* "U" and "V" denote the axes of the 2D texture (horizontal and vertical, respectively)

UV Mapping:
* Projecting a 2D image onto a 3D mode's surface

Texture Coordinate (TexCoord)
* To do something with the UVs's inside the Material Graph, you need the TextureCoordinate node
* Right-click -> Coordinates -> TextureCoordinate 
* We plug the TexCoord node into the UVs pin on the TextureSample node
* This node controls the UV tiling
  * UTiling
  * VTiling
* The higher these values, the pattern repeats MORE and get SMALLER
* The lower these values, the pattern repeats LESS and get LARGER.
* Use the Multiply node to more conveniently change both of the values
  * This multiplies BOTH UV Tiling values by the value in a connected Constant1 node
  * Hotkey: M+Left-click

=============================================================
Component Mask

* Right-click -> Math -> ComponentMask (Mask)
* We will use this to tile individual axis, have control and U and V individually
* Note that it displays (R, G), but these are just simply values
  * Can also add or remove, e.g. (R,G,B,A) or just (R) or just (G)
* If you connect a TexCoord to Mask the (R,G) will actually be the (U,V)

AppendVector (Append):
* You need this node in order to combine the two separate U,V values into the UVs pin on a TextureSample node

MakeFloat2:
* You can also use this node in order to combine two values and plug into the UV's on a TextureSample node


=============================================================
Moving Texture

Opacity:
* By default, this pin is not selectable
* Details -> Material -> Blend Mode
  * Change from Opaque to Translucent
* Note: The Opacity socket is looking for a mask, so if you connect just the R for example, it will cut out the arrow.

In the T_Arrow texture, you can connect the R channel to Opacity and it will cut out the rest.
Why? 
* If you open the texture, and isolate the RGB channels, you can see that the R G and B values are all "1" (white), where the arrow is. So, ANY of these (R G or B) connected to the Opacity pin will "cut out" the arrow
* That is, it only shows the values are the 1 (white stuff), and not showing the values that are 0 (black stuff).

----------
Making a Texture "Move"
* Need to manipulate the UV
Need:
* Speed
* Time
* Distance = Speed * Time (D = RT)

Time:  Use the Time node
  * Anytime you want to animate something in the Material Graph, you use the Time node
Speed: Use a Constant1 Vector (i.e. a single float)

Multiply Node:
* Time
* Speed

Add Node:
* TexCoord
* Multiply

Notice that when using a POSITIVE value, the texture moves BACKWARDS
Use a NEGATIVE value to move the texture FORWARDS
* This is due to what the "U" and "V" values mean. That is, it is moving the location. TODO
* One of the featured questions explains this

REMINDER:
* Use the ComponentMask (Mask) node to ISOLATE the U or V. (R or G in the Mask node)
* We need to Mask BOTH the U and V, BUT ONLY the U will be in the ADD node to move
* Use the AppendVector (Append) node to combine them back into UV coords

TODO:
* Why does passing in the U only cause a weird straight line?

NOTE:
* We can also use the Additive blend mode to achieve the same effect maybe

------------
Panner
* You can use the Panner node to do basically the same thing as above.
* The above method is what RoyalSkies uses. He doesn't use the Panner (forgot why)

Panner
* Coordinate: So you can plug in a texture's UV coordinates (for tiling for example)
* Time: Can use this to increase the time (most faster or slower, maybe for scale?)

=============================================================


